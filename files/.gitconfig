[advice]
    detachedHead = false
[commit]
    cleanup = scissors
    verbose = 1
    template = ~/.memfault-git-commit-template
[core]
    editor = nvim -c 'set filetype=gitcommit'
    bare = false
    excludesFile = ~/.gitignore_global
[rebase]
    autosquash = true
    autostash = true
[branch]
    sort = -committerdate
[diff]
    tool = nvimdiff
    algorithm = histogram
    colorMoved = dimmed-zebra
[merge]
    conflictStyle = zdiff3
[push]
    default = simple
[pull]
    ff = only
[rerere]
    enabled = true
[help]
    autocorrect = prompt
[user]
    name = Topher Brown
    email = topher@memfault.com

[stgit]
    # docs: https://github.com/stacked-git/stgit/blob/master/examples/gitconfig
    # Behave as if the --keep option is always passed
    autokeep = yes
    autostash = yes
    # Extra options to pass to "git diff" (extend/override with
    # -O/--diff-opts). For example, -M turns on rename detection.
    diff-opts = -M
    # The maximum length of an automatically generated patch name
    namelength = 50
[stgit "color"]
    applied = cyan_foreground
    current = green_foreground
    unapplied = white_foreground
    hidden = red_foreground

[filter "lfs"]
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f

[alias]
    a = add
    aa = add --all
    apa = add --patch
    au = add --update
    b = !git --no-pager branch
    bb = bisect bad
    bg = bisect good
    br = bisect reset
    c = commit
    cnv = commit --no-verify
    ca = commit --all
    canv = commit --all --no-verify
    cam = commit --amend --no-edit
    camnv = commit --amend --no-edit --no-verify
    cama = commit --amend --all --no-edit
    camanv = commit --amend --all --no-edit --no-verify
    came = commit --amend --edit --allow-empty
    camenv = commit --amend --edit --no-verify --allow-empty
    camae = commit --amend --all --edit --allow-empty
    camaenv = commit --amend --edit --all --no-verify --allow-empty
    campa = commit --amend --patch --no-edit
    campae = commit --amend --edit --patch --allow-empty
    campanv = commit --amend --patch --no-edit --no-verify
    cl = clean
    clf = clean -f
    clfd = clean -f -d
    cln = clean -n
    co = checkout
    com="!f() { git checkout master 2>/dev/null || git checkout main; }; f"
    coom="!f() { git checkout origin/master 2>/dev/null || git checkout origin/main; }; f"
    copa = checkout --patch
    cpa = commit --patch
    d = diff
    dh = diff HEAD
    dhs = diff HEAD --stat
    dhh = diff HEAD^
    dhhs = diff HEAD^ --stat
    ds = diff --staged
    dm="!f() { git diff master 2>/dev/null || git diff main; }; f"
    dmno="!f() { git diff master --name-only 2>/dev/null || git diff main --name-only; }; f"
    dom="!f() { git diff origin/master 2>/dev/null || git diff origin/main; }; f"
    domno="!f() { git diff origin/master --name-only 2>/dev/null || git diff origin/main --name-only; }; f"
    dno = diff --name-only
    dnp = !git --no-pager diff
    f = fetch
    p = push
    po = push origin
    poh = push origin HEAD
    pl = pull
    rea = rebase --abort
    rec = rebase --continue
    res = rebase --skip
    rem="!f() { git rebase master 2>/dev/null || git rebase main; }; f"
    reom="!f() { git rebase origin/master 2>/dev/null || git rebase origin/main; }; f"
    remi="!f() { git rebase master -i 2>/dev/null || git rebase main -i; }; f"
    reomi="!f() { git rebase origin/master -i 2>/dev/null || git rebase origin/main -i; }; f"
    s = status
    st = stash
    st = "!f() { git diff --cached --quiet || staged='--staged'; git stash $staged; }; f"
    std = stash drop
    stp = stash pop
    stpa = stash --patch
    sts = stash show --patch
    su = submodule update
[credential "https://github.com"]
	helper =
	helper = !gh auth git-credential
[credential "https://gist.github.com"]
	helper =
	helper = !gh auth git-credential
