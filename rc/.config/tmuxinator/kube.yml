# ~/.tmuxinator/wordstream.yml

name: kube
root: ~/dev/assertion-context

# Optional tmux socket
# socket_name: foo

# Runs before everything. Use it to start daemons etc.
# pre: sudo /etc/rc.d/mysqld start

# Project hooks
# Runs on project start, always
# on_project_start: command
# Run on project start, the first time
# on_project_first_start: command
# Run on project start, after the first time
# on_project_restart: command
# Run on project exit ( detaching from tmux session )
# on_project_exit: command
# Run on project stop
# on_project_stop: command

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
# startup_window: editor

# Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.
# startup_pane: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

# Runs after everything. Use it to attach to tmux with custom options etc.
# post: tmux -CC attach -t wordstream

windows:
  - kube-main:
      root: ~/dev/assertion-context
      layout: tiled
      panes:
        - shell:
          - workon assertion-context
  - kube-logs:
      root: ~/dev/assertion-context
      layout: '65ea,204x48,0,0[204x18,0,0{102x18,0,0[102x8,0,0,62,102x9,0,9,63],101x18,103,0,64},204x29,0,19,65]'
      panes:
        - nodes:
          - watch "kubectl get nodes"
        - services:
          - watch "kubectl get svc"
        - top:
          - watch "kubectl top node && kubectl top pod && kubectl top pod --namespace kube-system"
        - pods:
          - watch "kubectl get pods --show-all -o wide && kubectl get pods --namespace kube-system --show-all -o wide"
