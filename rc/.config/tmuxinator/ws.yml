# ~/.tmuxinator/wordstream.yml

name: ws
root: ~/dev/wordstream

# Optional tmux socket
# socket_name: foo

# Runs before everything. Use it to start daemons etc.
# pre: sudo /etc/rc.d/mysqld start

# Project hooks
# Runs on project start, always
# on_project_start: command
# Run on project start, the first time
# on_project_first_start: command
# Run on project start, after the first time
# on_project_restart: command
# Run on project exit ( detaching from tmux session )
# on_project_exit: command
# Run on project stop
# on_project_stop: command

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
# startup_window: editor

# Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.
# startup_pane: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

# Runs after everything. Use it to attach to tmux with custom options etc.
# post: tmux -CC attach -t wordstream

windows:
  - wordstream:
      layout: main-vertical
      panes:
        - workon wordstream
  - ipython:
      layout: main-vertical
      panes:
        - ipython:
            - workon wordstream
            - ipython
  - postgres:
      layout: main-vertical
      panes:
        - psql
  - postgres-readonly-adwords:
      layout: even-vertical
      panes:
        - aws1:
            - tmux set synchronize-panes on
            - export PGPASSWORD='***REMOVED***'; psql -U tbrown -h readonly.aws1.wordstream.com -d adwords
        - aws2:
            - export PGPASSWORD='***REMOVED***'; psql -U tbrown -h readonly.aws2.wordstream.com -d adwords
        - aws3:
            - export PGPASSWORD='***REMOVED***'; psql -U tbrown -h readonly.aws3.wordstream.com -d adwords
        - aws4:
            - export PGPASSWORD='***REMOVED***'; psql -U tbrown -h readonly.aws4.wordstream.com -d adwords
  - postgres-readonly-cluster:
      layout: main-vertical
      panes:
        - cluster:
            - export PGPASSWORD='***REMOVED***'; psql -U tbrown -h readonly.cluster.wordstream.com -d wordstream
  - static-assets:
      layout: main-vertical
      panes:
        - workon wordstream
        - cd client/manager
        - npm run develop
