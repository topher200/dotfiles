#!/usr/bin/env python

# "force pushes" a branch by deleting it and recreating it
#
# If you don't have --force permissions, you can't push a branch with modified
# commits. However, you can delete and recreate that branch! This script
# automates that.
#
# Runs on the current branch. Sanity checks to make sure you're not breaking
# obvious things.
#
# Run with: force-push-branch

import subprocess

def main():
    # get current git branch
    branch_name = subprocess.check_output(
        "git rev-parse --symbolic-full-name --abbrev-ref HEAD", shell=True)
    branch_name = branch_name.strip()

    # sanity check git branch
    if "stable" in branch_name:
        print "can't operate on stable branch {}".format(branch_name)
        return
    if "HEAD" in branch_name:
        print "can't operate on HEAD (got branch {})".format(branch_name)
        return
    if "PPC" not in branch_name:
        print "must operate on PPC branch (not {})".format(branch_name)
        return

    # delete git branch on remote
    try:
        print subprocess.check_output("git push --delete origin {}".format(branch_name), shell=True)
    except subprocess.CalledProcessError:
        print "Failed to delete branch - probably didn't exist"

    # push new branch up to remote
    print subprocess.check_output("git push origin {}".format(branch_name), shell=True)


if __name__ == "__main__":
    main()
